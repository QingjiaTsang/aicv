/* eslint-disable eslint-comments/no-unlimited-disable */

/* eslint-disable */

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/~__root'
import { Route as coreAuthenticatedLayoutImport } from './routes/~(core)/~_authenticated-layout'
import { Route as authSignupImport } from './routes/~(auth)/~signup'
import { Route as authSigninImport } from './routes/~(auth)/~signin'
import { Route as coreAuthenticatedLayoutIndexImport } from './routes/~(core)/~_authenticated-layout/~index'
import { Route as coreAuthenticatedLayoutDashboardLayoutImport } from './routes/~(core)/~_authenticated-layout/~dashboard/~_layout'
import { Route as coreAuthenticatedLayoutDashboardLayoutSettingsImport } from './routes/~(core)/~_authenticated-layout/~dashboard/~_layout/~settings'
import { Route as coreAuthenticatedLayoutDashboardLayoutAnalyticsImport } from './routes/~(core)/~_authenticated-layout/~dashboard/~_layout/~analytics'
import { Route as coreAuthenticatedLayoutDashboardLayoutIndexImport } from './routes/~(core)/~_authenticated-layout/~dashboard/~_layout/~index'

// Create Virtual Routes

const coreImport = createFileRoute('/(core)')()
const coreAuthenticatedLayoutDashboardImport = createFileRoute(
  '/(core)/_authenticated-layout/dashboard',
)()

// Create/Update Routes

const coreRoute = coreImport.update({
  id: '/(core)',
  getParentRoute: () => rootRoute,
} as any)

const coreAuthenticatedLayoutRoute = coreAuthenticatedLayoutImport.update({
  id: '/_authenticated-layout',
  getParentRoute: () => coreRoute,
} as any)

const authSignupRoute = authSignupImport.update({
  id: '/(auth)/signup',
  path: '/signup',
  getParentRoute: () => rootRoute,
} as any)

const authSigninRoute = authSigninImport.update({
  id: '/(auth)/signin',
  path: '/signin',
  getParentRoute: () => rootRoute,
} as any)

const coreAuthenticatedLayoutDashboardRoute =
  coreAuthenticatedLayoutDashboardImport.update({
    id: '/dashboard',
    path: '/dashboard',
    getParentRoute: () => coreAuthenticatedLayoutRoute,
  } as any)

const coreAuthenticatedLayoutIndexRoute =
  coreAuthenticatedLayoutIndexImport.update({
    id: '/',
    path: '/',
    getParentRoute: () => coreAuthenticatedLayoutRoute,
  } as any)

const coreAuthenticatedLayoutDashboardLayoutRoute =
  coreAuthenticatedLayoutDashboardLayoutImport.update({
    id: '/_layout',
    getParentRoute: () => coreAuthenticatedLayoutDashboardRoute,
  } as any)

const coreAuthenticatedLayoutDashboardLayoutSettingsRoute =
  coreAuthenticatedLayoutDashboardLayoutSettingsImport.update({
    id: '/settings',
    path: '/settings',
    getParentRoute: () => coreAuthenticatedLayoutDashboardLayoutRoute,
  } as any)

const coreAuthenticatedLayoutDashboardLayoutAnalyticsRoute =
  coreAuthenticatedLayoutDashboardLayoutAnalyticsImport.update({
    id: '/analytics',
    path: '/analytics',
    getParentRoute: () => coreAuthenticatedLayoutDashboardLayoutRoute,
  } as any)

const coreAuthenticatedLayoutDashboardLayoutIndexRoute =
  coreAuthenticatedLayoutDashboardLayoutIndexImport.update({
    id: '/',
    path: '/',
    getParentRoute: () => coreAuthenticatedLayoutDashboardLayoutRoute,
  } as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/(auth)/signin': {
      id: '/(auth)/signin'
      path: '/signin'
      fullPath: '/signin'
      preLoaderRoute: typeof authSigninImport
      parentRoute: typeof rootRoute
    }
    '/(auth)/signup': {
      id: '/(auth)/signup'
      path: '/signup'
      fullPath: '/signup'
      preLoaderRoute: typeof authSignupImport
      parentRoute: typeof rootRoute
    }
    '/(core)': {
      id: '/(core)'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof coreImport
      parentRoute: typeof rootRoute
    }
    '/(core)/_authenticated-layout': {
      id: '/(core)/_authenticated-layout'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof coreAuthenticatedLayoutImport
      parentRoute: typeof coreRoute
    }
    '/(core)/_authenticated-layout/': {
      id: '/(core)/_authenticated-layout/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof coreAuthenticatedLayoutIndexImport
      parentRoute: typeof coreAuthenticatedLayoutImport
    }
    '/(core)/_authenticated-layout/dashboard': {
      id: '/(core)/_authenticated-layout/dashboard'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof coreAuthenticatedLayoutDashboardImport
      parentRoute: typeof coreAuthenticatedLayoutImport
    }
    '/(core)/_authenticated-layout/dashboard/_layout': {
      id: '/(core)/_authenticated-layout/dashboard/_layout'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof coreAuthenticatedLayoutDashboardLayoutImport
      parentRoute: typeof coreAuthenticatedLayoutDashboardRoute
    }
    '/(core)/_authenticated-layout/dashboard/_layout/': {
      id: '/(core)/_authenticated-layout/dashboard/_layout/'
      path: '/'
      fullPath: '/dashboard/'
      preLoaderRoute: typeof coreAuthenticatedLayoutDashboardLayoutIndexImport
      parentRoute: typeof coreAuthenticatedLayoutDashboardLayoutImport
    }
    '/(core)/_authenticated-layout/dashboard/_layout/analytics': {
      id: '/(core)/_authenticated-layout/dashboard/_layout/analytics'
      path: '/analytics'
      fullPath: '/dashboard/analytics'
      preLoaderRoute: typeof coreAuthenticatedLayoutDashboardLayoutAnalyticsImport
      parentRoute: typeof coreAuthenticatedLayoutDashboardLayoutImport
    }
    '/(core)/_authenticated-layout/dashboard/_layout/settings': {
      id: '/(core)/_authenticated-layout/dashboard/_layout/settings'
      path: '/settings'
      fullPath: '/dashboard/settings'
      preLoaderRoute: typeof coreAuthenticatedLayoutDashboardLayoutSettingsImport
      parentRoute: typeof coreAuthenticatedLayoutDashboardLayoutImport
    }
  }
}

// Create and export the route tree

interface coreAuthenticatedLayoutDashboardLayoutRouteChildren {
  coreAuthenticatedLayoutDashboardLayoutIndexRoute: typeof coreAuthenticatedLayoutDashboardLayoutIndexRoute
  coreAuthenticatedLayoutDashboardLayoutAnalyticsRoute: typeof coreAuthenticatedLayoutDashboardLayoutAnalyticsRoute
  coreAuthenticatedLayoutDashboardLayoutSettingsRoute: typeof coreAuthenticatedLayoutDashboardLayoutSettingsRoute
}

const coreAuthenticatedLayoutDashboardLayoutRouteChildren: coreAuthenticatedLayoutDashboardLayoutRouteChildren =
  {
    coreAuthenticatedLayoutDashboardLayoutIndexRoute:
      coreAuthenticatedLayoutDashboardLayoutIndexRoute,
    coreAuthenticatedLayoutDashboardLayoutAnalyticsRoute:
      coreAuthenticatedLayoutDashboardLayoutAnalyticsRoute,
    coreAuthenticatedLayoutDashboardLayoutSettingsRoute:
      coreAuthenticatedLayoutDashboardLayoutSettingsRoute,
  }

const coreAuthenticatedLayoutDashboardLayoutRouteWithChildren =
  coreAuthenticatedLayoutDashboardLayoutRoute._addFileChildren(
    coreAuthenticatedLayoutDashboardLayoutRouteChildren,
  )

interface coreAuthenticatedLayoutDashboardRouteChildren {
  coreAuthenticatedLayoutDashboardLayoutRoute: typeof coreAuthenticatedLayoutDashboardLayoutRouteWithChildren
}

const coreAuthenticatedLayoutDashboardRouteChildren: coreAuthenticatedLayoutDashboardRouteChildren =
  {
    coreAuthenticatedLayoutDashboardLayoutRoute:
      coreAuthenticatedLayoutDashboardLayoutRouteWithChildren,
  }

const coreAuthenticatedLayoutDashboardRouteWithChildren =
  coreAuthenticatedLayoutDashboardRoute._addFileChildren(
    coreAuthenticatedLayoutDashboardRouteChildren,
  )

interface coreAuthenticatedLayoutRouteChildren {
  coreAuthenticatedLayoutIndexRoute: typeof coreAuthenticatedLayoutIndexRoute
  coreAuthenticatedLayoutDashboardRoute: typeof coreAuthenticatedLayoutDashboardRouteWithChildren
}

const coreAuthenticatedLayoutRouteChildren: coreAuthenticatedLayoutRouteChildren =
  {
    coreAuthenticatedLayoutIndexRoute: coreAuthenticatedLayoutIndexRoute,
    coreAuthenticatedLayoutDashboardRoute:
      coreAuthenticatedLayoutDashboardRouteWithChildren,
  }

const coreAuthenticatedLayoutRouteWithChildren =
  coreAuthenticatedLayoutRoute._addFileChildren(
    coreAuthenticatedLayoutRouteChildren,
  )

interface coreRouteChildren {
  coreAuthenticatedLayoutRoute: typeof coreAuthenticatedLayoutRouteWithChildren
}

const coreRouteChildren: coreRouteChildren = {
  coreAuthenticatedLayoutRoute: coreAuthenticatedLayoutRouteWithChildren,
}

const coreRouteWithChildren = coreRoute._addFileChildren(coreRouteChildren)

export interface FileRoutesByFullPath {
  '/signin': typeof authSigninRoute
  '/signup': typeof authSignupRoute
  '/': typeof coreAuthenticatedLayoutIndexRoute
  '/dashboard': typeof coreAuthenticatedLayoutDashboardLayoutRouteWithChildren
  '/dashboard/': typeof coreAuthenticatedLayoutDashboardLayoutIndexRoute
  '/dashboard/analytics': typeof coreAuthenticatedLayoutDashboardLayoutAnalyticsRoute
  '/dashboard/settings': typeof coreAuthenticatedLayoutDashboardLayoutSettingsRoute
}

export interface FileRoutesByTo {
  '/signin': typeof authSigninRoute
  '/signup': typeof authSignupRoute
  '/': typeof coreAuthenticatedLayoutIndexRoute
  '/dashboard': typeof coreAuthenticatedLayoutDashboardLayoutIndexRoute
  '/dashboard/analytics': typeof coreAuthenticatedLayoutDashboardLayoutAnalyticsRoute
  '/dashboard/settings': typeof coreAuthenticatedLayoutDashboardLayoutSettingsRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/(auth)/signin': typeof authSigninRoute
  '/(auth)/signup': typeof authSignupRoute
  '/(core)': typeof coreRouteWithChildren
  '/(core)/_authenticated-layout': typeof coreAuthenticatedLayoutRouteWithChildren
  '/(core)/_authenticated-layout/': typeof coreAuthenticatedLayoutIndexRoute
  '/(core)/_authenticated-layout/dashboard': typeof coreAuthenticatedLayoutDashboardRouteWithChildren
  '/(core)/_authenticated-layout/dashboard/_layout': typeof coreAuthenticatedLayoutDashboardLayoutRouteWithChildren
  '/(core)/_authenticated-layout/dashboard/_layout/': typeof coreAuthenticatedLayoutDashboardLayoutIndexRoute
  '/(core)/_authenticated-layout/dashboard/_layout/analytics': typeof coreAuthenticatedLayoutDashboardLayoutAnalyticsRoute
  '/(core)/_authenticated-layout/dashboard/_layout/settings': typeof coreAuthenticatedLayoutDashboardLayoutSettingsRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/signin'
    | '/signup'
    | '/'
    | '/dashboard'
    | '/dashboard/'
    | '/dashboard/analytics'
    | '/dashboard/settings'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/signin'
    | '/signup'
    | '/'
    | '/dashboard'
    | '/dashboard/analytics'
    | '/dashboard/settings'
  id:
    | '__root__'
    | '/(auth)/signin'
    | '/(auth)/signup'
    | '/(core)'
    | '/(core)/_authenticated-layout'
    | '/(core)/_authenticated-layout/'
    | '/(core)/_authenticated-layout/dashboard'
    | '/(core)/_authenticated-layout/dashboard/_layout'
    | '/(core)/_authenticated-layout/dashboard/_layout/'
    | '/(core)/_authenticated-layout/dashboard/_layout/analytics'
    | '/(core)/_authenticated-layout/dashboard/_layout/settings'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  authSigninRoute: typeof authSigninRoute
  authSignupRoute: typeof authSignupRoute
  coreRoute: typeof coreRouteWithChildren
}

const rootRouteChildren: RootRouteChildren = {
  authSigninRoute: authSigninRoute,
  authSignupRoute: authSignupRoute,
  coreRoute: coreRouteWithChildren,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "~__root.tsx",
      "children": [
        "/(auth)/signin",
        "/(auth)/signup",
        "/(core)"
      ]
    },
    "/(auth)/signin": {
      "filePath": "~(auth)/~signin.tsx"
    },
    "/(auth)/signup": {
      "filePath": "~(auth)/~signup.tsx"
    },
    "/(core)": {
      "filePath": "~(core)",
      "children": [
        "/(core)/_authenticated-layout"
      ]
    },
    "/(core)/_authenticated-layout": {
      "filePath": "~(core)/~_authenticated-layout.tsx",
      "parent": "/(core)",
      "children": [
        "/(core)/_authenticated-layout/",
        "/(core)/_authenticated-layout/dashboard"
      ]
    },
    "/(core)/_authenticated-layout/": {
      "filePath": "~(core)/~_authenticated-layout/~index.tsx",
      "parent": "/(core)/_authenticated-layout"
    },
    "/(core)/_authenticated-layout/dashboard": {
      "filePath": "~(core)/~_authenticated-layout/~dashboard",
      "parent": "/(core)/_authenticated-layout",
      "children": [
        "/(core)/_authenticated-layout/dashboard/_layout"
      ]
    },
    "/(core)/_authenticated-layout/dashboard/_layout": {
      "filePath": "~(core)/~_authenticated-layout/~dashboard/~_layout.tsx",
      "parent": "/(core)/_authenticated-layout/dashboard",
      "children": [
        "/(core)/_authenticated-layout/dashboard/_layout/",
        "/(core)/_authenticated-layout/dashboard/_layout/analytics",
        "/(core)/_authenticated-layout/dashboard/_layout/settings"
      ]
    },
    "/(core)/_authenticated-layout/dashboard/_layout/": {
      "filePath": "~(core)/~_authenticated-layout/~dashboard/~_layout/~index.tsx",
      "parent": "/(core)/_authenticated-layout/dashboard/_layout"
    },
    "/(core)/_authenticated-layout/dashboard/_layout/analytics": {
      "filePath": "~(core)/~_authenticated-layout/~dashboard/~_layout/~analytics.tsx",
      "parent": "/(core)/_authenticated-layout/dashboard/_layout"
    },
    "/(core)/_authenticated-layout/dashboard/_layout/settings": {
      "filePath": "~(core)/~_authenticated-layout/~dashboard/~_layout/~settings.tsx",
      "parent": "/(core)/_authenticated-layout/dashboard/_layout"
    }
  }
}
ROUTE_MANIFEST_END */
